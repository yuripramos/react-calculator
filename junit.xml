<testsuites name="jest tests" tests="80" failures="0" time="14.379">
  <testsuite name="i18n" errors="0" failures="0" skipped="0" timestamp="2019-04-01T19:58:47" time="4.577" tests="14">
    <testcase classname="i18n bootstrap Should get i18n object from server" name="i18n bootstrap Should get i18n object from server" time="0.016">
    </testcase>
    <testcase classname="i18n setTranslations Should set the translations data" name="i18n setTranslations Should set the translations data" time="0.001">
    </testcase>
    <testcase classname="i18n getLanguage Should return the current language" name="i18n getLanguage Should return the current language" time="0.002">
    </testcase>
    <testcase classname="i18n isEsES Should return true if language is es-ES" name="i18n isEsES Should return true if language is es-ES" time="0.001">
    </testcase>
    <testcase classname="i18n isEsES Should return false if language is not es-ES" name="i18n isEsES Should return false if language is not es-ES" time="0.001">
    </testcase>
    <testcase classname="i18n isEnUS Should return true if language is en-US" name="i18n isEnUS Should return true if language is en-US" time="0.001">
    </testcase>
    <testcase classname="i18n isEnUS Should return false if language is not en-US" name="i18n isEnUS Should return false if language is not en-US" time="0.001">
    </testcase>
    <testcase classname="i18n translate Should translate based on a i18n data object if key exists" name="i18n translate Should translate based on a i18n data object if key exists" time="0">
    </testcase>
    <testcase classname="i18n translate Shouldn&apos;t translate if key not exist" name="i18n translate Shouldn&apos;t translate if key not exist" time="0.001">
    </testcase>
    <testcase classname="i18n withI18n Shouldn&apos;t render component if fetch isn&apos;t done" name="i18n withI18n Shouldn&apos;t render component if fetch isn&apos;t done" time="0.086">
    </testcase>
    <testcase classname="i18n withI18n Should render component only if fetch is done" name="i18n withI18n Should render component only if fetch is done" time="0.024">
    </testcase>
    <testcase classname="i18n withI18n Should set language when subscribe is triggered" name="i18n withI18n Should set language when subscribe is triggered" time="0.023">
    </testcase>
    <testcase classname="i18n withI18n Should not set language when subscribe is triggered and unserInfo language is falsy" name="i18n withI18n Should not set language when subscribe is triggered and unserInfo language is falsy" time="0.003">
    </testcase>
    <testcase classname="i18n withI18n Should unlisten state when unmounted" name="i18n withI18n Should unlisten state when unmounted" time="0.034">
    </testcase>
  </testsuite>
  <testsuite name="News actions" errors="0" failures="0" skipped="0" timestamp="2019-04-01T19:58:47" time="4.653" tests="3">
    <testcase classname="News actions should return an action object" name="News actions should return an action object" time="0.019">
    </testcase>
    <testcase classname="News actions topUserStories Should topUserStories with success" name="News actions topUserStories Should topUserStories with success" time="0.007">
    </testcase>
    <testcase classname="News actions topUserStories Should topUserStories with errors" name="News actions topUserStories Should topUserStories with errors" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Calculator" errors="0" failures="0" skipped="0" timestamp="2019-04-01T19:58:47" time="5.023" tests="1">
    <testcase classname="Calculator should match snapshot" name="Calculator should match snapshot" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="shuffleArray" errors="0" failures="0" skipped="0" timestamp="2019-04-01T19:58:48" time="4.519" tests="2">
    <testcase classname="shuffleArray should shuffle array correctly" name="shuffleArray should shuffle array correctly" time="0.009">
    </testcase>
    <testcase classname="FlattenArray should Flatten" name="FlattenArray should Flatten" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="CategoryArticle Component" errors="0" failures="0" skipped="0" timestamp="2019-04-01T19:58:47" time="5.371" tests="7">
    <testcase classname="CategoryArticle Component should match snapshot with props" name="CategoryArticle Component should match snapshot with props" time="0.037">
    </testcase>
    <testcase classname="CategoryArticle Component should warn users about functionality if they are in initial page" name="CategoryArticle Component should warn users about functionality if they are in initial page" time="0.008">
    </testcase>
    <testcase classname="CategoryArticle Component should NOT warn users about functionality if they are in initial page" name="CategoryArticle Component should NOT warn users about functionality if they are in initial page" time="0.002">
    </testcase>
    <testcase classname="CategoryArticle Component should render Subtitle if they are in initial page and the number be equals the lenght of the articles" name="CategoryArticle Component should render Subtitle if they are in initial page and the number be equals the lenght of the articles" time="0.003">
    </testcase>
    <testcase classname="CategoryArticle Component should NOT render Subtitle if they are in initial page" name="CategoryArticle Component should NOT render Subtitle if they are in initial page" time="0.002">
    </testcase>
    <testcase classname="CategoryArticle Component should NOT render Clicker link if they are in initial page and equals the length of the articles" name="CategoryArticle Component should NOT render Clicker link if they are in initial page and equals the length of the articles" time="0.004">
    </testcase>
    <testcase classname="CategoryArticle Component should render Clicker link if they are in initial page" name="CategoryArticle Component should render Clicker link if they are in initial page" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Keypad component" errors="0" failures="0" skipped="0" timestamp="2019-04-01T19:58:52" time="0.974" tests="4">
    <testcase classname="Keypad component should call onClick on ( click" name="Keypad component should call onClick on ( click" time="0.028">
    </testcase>
    <testcase classname="Keypad component should call onClick on CE click" name="Keypad component should call onClick on CE click" time="0.004">
    </testcase>
    <testcase classname="Keypad component should call onClick on ) click" name="Keypad component should call onClick on ) click" time="0.003">
    </testcase>
    <testcase classname="Keypad component should call onClick on C click" name="Keypad component should call onClick on C click" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="CategoryArticleExpanded Component" errors="0" failures="0" skipped="0" timestamp="2019-04-01T19:58:47" time="6.022" tests="2">
    <testcase classname="CategoryArticleExpanded Component should match snapshot with props" name="CategoryArticleExpanded Component should match snapshot with props" time="0.03">
    </testcase>
    <testcase classname="CategoryArticleExpanded Component should setState to apply the content" name="CategoryArticleExpanded Component should setState to apply the content" time="0.179">
    </testcase>
  </testsuite>
  <testsuite name="renderDescription" errors="0" failures="0" skipped="0" timestamp="2019-04-01T19:58:53" time="0.777" tests="10">
    <testcase classname="renderDescription should return a single description" name="renderDescription should return a single description" time="0.004">
    </testcase>
    <testcase classname="renderDescription should return multiple descriptions" name="renderDescription should return multiple descriptions" time="0.002">
    </testcase>
    <testcase classname="renderDescription should return no descriptions" name="renderDescription should return no descriptions" time="0.001">
    </testcase>
    <testcase classname="Default component should match snapshot with a closed modal" name="Default component should match snapshot with a closed modal" time="0.002">
    </testcase>
    <testcase classname="Default component should match snapshot with an open modal" name="Default component should match snapshot with an open modal" time="0.003">
    </testcase>
    <testcase classname="Default component should match snapshot with an open modal with title" name="Default component should match snapshot with an open modal with title" time="0.002">
    </testcase>
    <testcase classname="Default component should trigger modalSettings.onClose prop when click on NO button" name="Default component should trigger modalSettings.onClose prop when click on NO button" time="0.002">
    </testcase>
    <testcase classname="Default component should match snapshot with an open modal with icon" name="Default component should match snapshot with an open modal with icon" time="0.002">
    </testcase>
    <testcase classname="Default component should match snapshot with an open modal with description string" name="Default component should match snapshot with an open modal with description string" time="0.03">
    </testcase>
    <testcase classname="Default component should match snapshot with an open modal with description array" name="Default component should match snapshot with an open modal with description array" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="Layout component" errors="0" failures="0" skipped="0" timestamp="2019-04-01T19:58:52" time="1.218" tests="1">
    <testcase classname="Layout component should match snapshot with children" name="Layout component should match snapshot with children" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="Category Component" errors="0" failures="0" skipped="0" timestamp="2019-04-01T19:58:47" time="6.261" tests="3">
    <testcase classname="Category Component should match snapshot with props" name="Category Component should match snapshot with props" time="0.037">
    </testcase>
    <testcase classname="Category Component should call filterByType" name="Category Component should call filterByType" time="0.187">
    </testcase>
    <testcase classname="Category Component should render CategoryArticle Comp" name="Category Component should render CategoryArticle Comp" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="Modal component" errors="0" failures="0" skipped="0" timestamp="2019-04-01T19:58:53" time="0.924" tests="6">
    <testcase classname="Modal component should match snapshot with a closed modal" name="Modal component should match snapshot with a closed modal" time="0.028">
    </testcase>
    <testcase classname="Modal component should match snapshot with an open modal" name="Modal component should match snapshot with an open modal" time="0.045">
    </testcase>
    <testcase classname="Modal component should match snapshot with an open modal with title" name="Modal component should match snapshot with an open modal with title" time="0.029">
    </testcase>
    <testcase classname="Modal component should match snapshot with an open modal with icon" name="Modal component should match snapshot with an open modal with icon" time="0.009">
    </testcase>
    <testcase classname="Modal component should match snapshot with an open modal with description string" name="Modal component should match snapshot with an open modal with description string" time="0.008">
    </testcase>
    <testcase classname="Modal component should match snapshot with an open modal with description array" name="Modal component should match snapshot with an open modal with description array" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="App component" errors="0" failures="0" skipped="0" timestamp="2019-04-01T19:58:52" time="1.932" tests="1">
    <testcase classname="App component should match snapshot" name="App component should match snapshot" time="0.019">
    </testcase>
  </testsuite>
  <testsuite name="LocalLoading component" errors="0" failures="0" skipped="0" timestamp="2019-04-01T19:58:53" time="0.781" tests="1">
    <testcase classname="LocalLoading component should match snapshot" name="LocalLoading component should match snapshot" time="0.057">
    </testcase>
  </testsuite>
  <testsuite name="Routes component" errors="0" failures="0" skipped="0" timestamp="2019-04-01T19:58:52" time="1.747" tests="1">
    <testcase classname="Routes component should match snapshot" name="Routes component should match snapshot" time="0.018">
    </testcase>
  </testsuite>
  <testsuite name="ResultComponent" errors="0" failures="0" skipped="0" timestamp="2019-04-01T19:58:54" time="0.658" tests="1">
    <testcase classname="ResultComponent should match snapshot" name="ResultComponent should match snapshot" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="SidebarMenu component" errors="0" failures="0" skipped="0" timestamp="2019-04-01T19:58:53" time="0.767" tests="5">
    <testcase classname="SidebarMenu component should match snapshot" name="SidebarMenu component should match snapshot" time="0.008">
    </testcase>
    <testcase classname="SidebarMenu component should match snapshot for desktop" name="SidebarMenu component should match snapshot for desktop" time="0.006">
    </testcase>
    <testcase classname="SidebarMenu component redirectTo should invoke redirect" name="SidebarMenu component redirectTo should invoke redirect" time="0.003">
    </testcase>
    <testcase classname="SidebarMenu component isActive should return true if currentLocation includes the path" name="SidebarMenu component isActive should return true if currentLocation includes the path" time="0.002">
    </testcase>
    <testcase classname="SidebarMenu component isActive should return false if currentLocation doesnt include the path" name="SidebarMenu component isActive should return false if currentLocation doesnt include the path" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Subnav component" errors="0" failures="0" skipped="0" timestamp="2019-04-01T19:58:54" time="0.859" tests="6">
    <testcase classname="Subnav component should match snapshot with no tabs" name="Subnav component should match snapshot with no tabs" time="0.006">
    </testcase>
    <testcase classname="Subnav component should match snapshot with context title" name="Subnav component should match snapshot with context title" time="0.003">
    </testcase>
    <testcase classname="Subnav component should match snapshot with tabs" name="Subnav component should match snapshot with tabs" time="0.004">
    </testcase>
    <testcase classname="Subnav component should invoke listen" name="Subnav component should invoke listen" time="0.001">
    </testcase>
    <testcase classname="Subnav component should have a activeUrl state as same as location.pathname when component mounts" name="Subnav component should have a activeUrl state as same as location.pathname when component mounts" time="0.205">
    </testcase>
    <testcase classname="Subnav component should call history.push with the same url as clicked tab" name="Subnav component should call history.push with the same url as clicked tab" time="0.026">
    </testcase>
  </testsuite>
  <testsuite name="NotFound component" errors="0" failures="0" skipped="0" timestamp="2019-04-01T19:58:54" time="0.863" tests="1">
    <testcase classname="NotFound component should match snapshot" name="NotFound component should match snapshot" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="Header component" errors="0" failures="0" skipped="0" timestamp="2019-04-01T19:58:54" time="0.761" tests="1">
    <testcase classname="Header component should match snapshot with props" name="Header component should match snapshot with props" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="Footer component" errors="0" failures="0" skipped="0" timestamp="2019-04-01T19:58:54" time="0.732" tests="1">
    <testcase classname="Footer component should match snapshot" name="Footer component should match snapshot" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="modal action" errors="0" failures="0" skipped="0" timestamp="2019-04-01T19:58:54" time="0.696" tests="3">
    <testcase classname="modal action Should return an action object" name="modal action Should return an action object" time="0.006">
    </testcase>
    <testcase classname="modal action openModal Should change state to have an open modal" name="modal action openModal Should change state to have an open modal" time="0.001">
    </testcase>
    <testcase classname="modal action closeModal Should change state to have no modal" name="modal action closeModal Should change state to have no modal" time="0">
    </testcase>
  </testsuite>
  <testsuite name="DefaultContent component" errors="0" failures="0" skipped="0" timestamp="2019-04-01T19:58:54" time="0.857" tests="1">
    <testcase classname="DefaultContent component should match snapshot" name="DefaultContent component should match snapshot" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="store" errors="0" failures="0" skipped="0" timestamp="2019-04-01T19:58:54" time="0.841" tests="2">
    <testcase classname="store Should the store for common window" name="store Should the store for common window" time="0.007">
    </testcase>
    <testcase classname="store Should the store for window defined" name="store Should the store for window defined" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="commonState" errors="0" failures="0" skipped="0" timestamp="2019-04-01T19:58:54" time="0.732" tests="1">
    <testcase classname="commonState Should return the state" name="commonState Should return the state" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="redirect" errors="0" failures="0" skipped="0" timestamp="2019-04-01T19:58:55" time="0.634" tests="1">
    <testcase classname="redirect Should set location href to url value" name="redirect Should set location href to url value" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2019-04-01T19:58:55" time="0.523" tests="1">
    <testcase classname=" should return true for mobile devices" name=" should return true for mobile devices" time="0.002">
    </testcase>
  </testsuite>
</testsuites>